# টাস্ক-বাংলা সিকিউরিটি ও কনফিগারেশন চেকলিস্ট

## ১. API Key ও সিক্রেট ম্যানেজমেন্ট
- সব API Key, সিক্রেট, পেমেন্ট ক্রেডেনশিয়াল `.env.local` বা `.env` ফাইলে রাখুন (কখনোই গিটে কমিট করবেন না)
- যেমন:
  - GEMINI_API_KEY=your_gemini_key
  - ADSENSE_API_KEY=your_adsense_key
  - PAYMENT_API_KEY=your_payment_key

## ২. ফ্রন্টএন্ডে কোথায় API Key ব্যবহার করবেন না
- শুধুমাত্র পাবলিক (যেমন: গুগল ম্যাপস পাবলিক) API key ফ্রন্টএন্ডে ব্যবহার করুন
- গোপন/সিক্রেট API key কখনোই ফ্রন্টএন্ডে রাখবেন না
- ফ্রন্টএন্ডে `.env.local` থেকে NEXT_PUBLIC_ দিয়ে শুরু হওয়া key ব্যবহার করা যায় (তবুও গোপন তথ্য দেবেন না)

## ৩. ব্যাকএন্ডে API Key ও সিক্রেট ব্যবহার
- ব্যাকএন্ড (Node.js/Express) এ সব সিক্রেট `.env` ফাইলে রাখুন
- process.env.GEMINI_API_KEY ইত্যাদি দিয়ে পড়ুন
- ব্যাকএন্ডে রেট-লিমিট, ইনপুট ভ্যালিডেশন, JWT/Token চেক, CSRF, XSS, SQL/NoSQL Injection প্রোটেকশন দিন

## ৪. ফ্রন্টএন্ড-ব্যাকএন্ড API কন্ট্রোল
- সব API কল ব্যাকএন্ডের মাধ্যমে করুন (ফ্রন্টএন্ড থেকে সরাসরি 3rd party API-তে না)
- ব্যাকএন্ডে ইউজার অথেন্টিকেশন, ব্যালেন্স চেক, রোল চেক, রেট-লিমিট, লগিং রাখুন

## ৫. কোথায় কোথায় API Key লাগবে
- Gemini/Google AI: GEMINI_API_KEY (ব্যাকএন্ডে)
- Google Adsense: ADSENSE_API_KEY (ব্যাকএন্ডে, ফ্রন্টএন্ডে পাবলিক অংশ)
- Payment (বিকাশ/নগদ/SSLCommerz/Stripe): PAYMENT_API_KEY (শুধু ব্যাকএন্ডে)
- অন্যান্য 3rd party API: `.env` ফাইলে

## ৬. ফাইনাল চেক
- সব API call ও sensitive logic ব্যাকএন্ডে রাখুন
- ফ্রন্টএন্ডে কোনো সিক্রেট/গোপন তথ্য না রাখুন
- ব্যাকএন্ডে সব API-তে JWT/Token চেক, রেট-লিমিট, ইনপুট ভ্যালিডেশন, লগিং দিন
- ব্যাকএন্ডে সব পেমেন্ট/টাকা লেনদেন ডাবল-চেক করুন
- ব্যাকএন্ড ও ফ্রন্টএন্ডে সব ফর্ম ইনপুট স্যানিটাইজ করুন

## ৭. ডকুমেন্টেশন ও কন্ট্রোল
- এই ফাইলটি (securityChecklist.txt) সব ডেভেলপার ও অ্যাডমিনের জন্য রেফারেন্স হিসেবে রাখুন
- নতুন API/Key/সিক্রেট যোগ হলে এখানে নোট করুন

---

# ✅ এই চেকলিস্ট ফলো করলে আপনার টাকাব্যবস্থা ও API নিরাপদ থাকবে!
